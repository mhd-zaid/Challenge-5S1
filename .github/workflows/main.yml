name: Backend tests

on:
  push:
    branches:
      - "*"
jobs:
  install-back-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2.18"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        working-directory: ./server

      - name: Install Lexik keys
        run: php bin/console lexik:jwt:generate-keypair
        working-directory: ./server

      - name: Compress vendor directory
        run: tar -czf /tmp/vendor.tar.gz -C ./server vendor

      - name: Archive vendor directory
        uses: actions/upload-artifact@v3
        with:
          name: vendor
          path: /tmp/vendor.tar.gz

      - name: Compress JWT keys
        run: tar -czf /tmp/jwt-keys.tar.gz -C ./server/config jwt

      - name: Archive JWT keys
        uses: actions/upload-artifact@v3
        with:
          name: jwt-keys
          path: /tmp/jwt-keys.tar.gz

  test_backend:
    needs: install-back-dependencies
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://user:password@localhost:5432/testdb?serverVersion=13&charset=utf8
    services:
      database:
        image: postgres:13
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2.18"

      - name: Download vendor directory
        uses: actions/download-artifact@v3
        with:
          name: vendor
          path: /tmp

      - name: Uncompress vendor directory
        run: tar -xzf /tmp/vendor.tar.gz -C ./server

      - name: Download JWT keys
        uses: actions/download-artifact@v3
        with:
          name: jwt-keys
          path: /tmp

      - name: Uncompress JWT keys
        run: tar -xzf /tmp/jwt-keys.tar.gz -C ./server/config

      - name: Install dockerize
        run: |
          curl -sSL https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar -xzC /usr/local/bin

      - name: Wait for database
        run: |
          dockerize -wait tcp://localhost:5432 -timeout 1m

      - name: Run migrations
        run: php bin/console d:m:m --no-interaction
        working-directory: ./server

      - name: Run tests
        run: php bin/phpunit
        working-directory: ./server

  install-front-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Build
        run: npm run build
        working-directory: ./client

      - name: Compress build
        run: tar -czf /tmp/build.tar.gz -C ${{ github.workspace }}/client .

      - name: Archive build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: /tmp/build.tar.gz
  lint:
    runs-on: ubuntu-latest
    needs: install-front-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build directory
        uses: actions/download-artifact@v3
        with:
          name: build
          path: /tmp

      - name: Uncompress build directory
        run: tar -xzf /tmp/build.tar.gz -C ${{ github.workspace }}/client/build

      - name: Lint
        run: npm run lint
        working-directory: ./client
        continue-on-error: true

  test_frontend:
    runs-on: ubuntu-latest
    needs: install-front-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build directory
        uses: actions/download-artifact@v3
        with:
          name: build
          path: /tmp

      - name: Uncompress build directory
        run: tar -xzf /tmp/build.tar.gz -C ${{ github.workspace }}/client/build

      - name: Run Jest
        run: npm run test
        working-directory: ./client
